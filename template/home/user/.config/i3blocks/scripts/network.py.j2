#!/usr/bin/env python3

from subprocess import getoutput, run
import re

def parse_wifi_info(wifi_line):
  match = re.match(r'Connected to (.*) at (\d+)% \(IP: ([\d\.]+)\)', wifi_line)
  return [match.group(1), int(match.group(2)), match.group(3)]

def parse_connection_type(type_line):
  match = re.match(r'Connection type: (.*)$', type_line)
  return match.group(1)

def parse_connection_status(status_line):
  match = re.match(r'Connection status: (.*)$', status_line)
  return match.group(1)

def get_network_info():
  raw_out_lines = getoutput('wicd-cli -i').split("\n")
  connection_status = parse_connection_status(raw_out_lines[0])
  if connection_status == "Not connected":
    return connection_status, None, None
  connection_type = parse_connection_type(raw_out_lines[1])
  if connection_type == "Wireless":
    return connection_status, connection_type, parse_wifi_info(raw_out_lines[2])

connection_status, connection_type, connection_info = get_network_info()

if connection_status == "Not connected":
  print('<span color="#666666">Not connected</span>')
  exit()
if connection_type == "Wireless":
  essid = connection_info[0]
  signal = connection_info[1]
  ip_address = connection_info[2]
  icon = '<span font="FontAwesome">\uf1eb</span>'
  if signal > 60:
    color = "#00FF00"
  elif signal > 30:
    color = "#FFFF00"
  else:
    color = "#FF0000"
  print('<span color="{}">{} {} ({})</span>'.format(color, icon, essid, ip_address))